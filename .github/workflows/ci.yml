name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - v*

jobs:
  linter:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install linter and formatter dependencies
      run: |
         python -m pip install --upgrade pip
         python -m pip install -r requirements_developers.txt

    - name: Lint with flake8 
      run: flake8 src/ tests/

    - name: Check black format 
      run:  black --check --diff src/ tests/

  build-trd:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    name: "üêç ${{ matrix.python-version  }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install software dependencies
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install graphviz -y
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -r requirements_developers.txt

    - name: Test with pytest
      env:
        TZPRO_API_KEY: ${{ secrets.TZPRO_API_KEY }} 
      run: pytest tests/

  build-documentation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
          sudo apt-get update -y
          sudo apt-get install graphviz -y
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements_developers.txt

    - name: Generate diagrams
      run:  python docs/fsm/graphviz/draw_state_diagrams.py

    - name: Build documentation
      uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: docs/
        pre-build-command: |
          mkdir -p docs/build/
          touch docs/build/.nojekyll
          python -m pip install -r requirements_developers.txt
        build-command: sphinx-build -b html . build

  build-docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build the docker image
      run: docker build -t trdo/tezos-reward-distributor .
